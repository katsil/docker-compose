version: '3.8'

services:
  locust:
    image: locustio/locust
    ports:
      - "10089:8089"
    volumes:
      - ./locust:/mnt/locust
    command: -f /mnt/locust/locustfile.py
    #entrypoint: sh -c "sh /mnt/locust/run_locust.sh"
    networks:
      - app-network

  cadvisor:
    image: google/cadvisor:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /sys:/sys
      - /var/lib/docker/:/var/lib/docker/
    networks:
      - app-network

  flask-app:
    build: ./python
    deploy:
      #      replicas: 3
      #      update_config:
      #        parallelism: 2
      #        delay: 10s
      restart_policy:
        condition: on-failure
    networks:
      - app-network

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "8030:80"
    volumes:
      - ./nginx/nginx_configs:/etc/nginx/conf.d
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/hello"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 5s

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: nginx-exporter
    command: -nginx.scrape-uri http://nginx/nginx_status
    ports:
      - "9113:9113"
    networks:
      - app-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/alert.rules.yml:/etc/prometheus/alert.rules.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "10090:9090"
    networks:
      - app-network

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    ports:
      - "10093:9093"
    volumes:
      - ./prometheus/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    networks:
      - app-network

networks:
  app-network:
    driver: bridge